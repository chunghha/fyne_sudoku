name: Build and Release Fyne App

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.21"] # Ensure Go 1.21+
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      # --- Install OS-specific dependencies ---
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libgl1-mesa-dev xorg-dev

      - name: Install Windows dependencies (MinGW)
        if: runner.os == 'Windows'
        run: choco install mingw --no-progress

      # --- Build using fyne package via go run ---
      - name: Set Env Vars and Build (Linux)
        if: runner.os == 'Linux'
        run: |
          export GOOS=linux
          export GOARCH=amd64
          export CGO_ENABLED=1
          # Build command (creates .tar.xz by default)
          go run fyne.io/tools/cmd/fyne@latest package -os linux -name fyne-sudoku-linux-amd64
          echo "--- Listing files after Linux build ---"
          ls -l
        env:
          GO111MODULE: on

      - name: Set Env Vars and Build (macOS)
        if: runner.os == 'MacOS'
        run: |
          export GOOS=darwin
          export GOARCH=amd64 # GOARCH still needed for Go build process
          export CGO_ENABLED=1
          # Build command (creates .app bundle)
          go run fyne.io/tools/cmd/fyne@latest package -os darwin -name fyne-sudoku-macos-amd64
          echo "--- Listing files after macOS build ---"
          ls -l
          # Zip the .app bundle for release artifact
          zip -r fyne-sudoku-macos-amd64.zip fyne-sudoku-macos-amd64.app
        env:
          GO111MODULE: on

      - name: Set Env Vars and Build (Windows)
        if: runner.os == 'Windows'
        # Using PowerShell syntax
        run: |
          # Add MinGW to PATH (still needed for CGO compiler)
          $env:Path = "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin;$($env:Path)"
          $env:GOOS = "windows"
          $env:GOARCH = "amd64"
          $env:CGO_ENABLED = "1"
          # Build command (creates .exe)
          go run fyne.io/tools/cmd/fyne@latest package -os windows -name fyne-sudoku-windows-amd64.exe
          Write-Host "--- Listing files after Windows build ---"
          ls
        env:
          GO111MODULE: on
          # CC: gcc

      # --- Upload Artifacts ---
      - name: Upload Linux Artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: fyne-sudoku-linux-amd64 # Artifact name can remain the same
          # *** Correct path to the generated archive ***
          path: fyne-sudoku-linux-amd64.tar.xz

      - name: Upload macOS Artifact
        if: runner.os == 'MacOS'
        uses: actions/upload-artifact@v4
        with:
          name: fyne-sudoku-macos-amd64.zip
          path: fyne-sudoku-macos-amd64.zip

      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: fyne-sudoku-windows-amd64.exe
          path: fyne-sudoku-windows-amd64.exe

  # Job to create the GitHub Release and upload build artifacts
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Sudoku Generator release ${{ github.ref_name }}
            Binaries for Linux (.tar.xz), macOS (.zip), and Windows (.exe).
          files: |
            # *** Correct path for the downloaded Linux artifact ***
            artifacts/fyne-sudoku-linux-amd64/fyne-sudoku-linux-amd64.tar.xz
            artifacts/fyne-sudoku-macos-amd64.zip/fyne-sudoku-macos-amd64.zip
            artifacts/fyne-sudoku-windows-amd64.exe/fyne-sudoku-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
